Project Warrior GDD
Pablo Donato, Luc Chabassier
%%date(%d-%m-%Y)




= Présentation =

Project Warrior est le nom de code pour désigner un projet de jeu de combat multijoueurs développé en C++ par le collectif DWARVES, constituant par ailleurs son premier projet d'envergure. Project Warrior peut être qualifié de Super Smash Bros. like dans la dynamique et le système de combat. Néanmoins il possède ses caractéristiques propres telles qu'un gameplay où les sorts (attaques spéciales dans SSB) prennent une place plus importante, notamment via leur coût en mana qui demande une gestion plus intelligente de leur utilisation. Un soin tout particulier sera aussi apporté au background, à l'univers et donc à l'ambiance générale du jeu afin d'en dégager une personnalité propre d'inspirations diverses. On cherchera aussi un style de préférence un peu décalé et humoristique, pour conserver l'ambiance //joyeux bordel// propre aux SSB, avec des personnages et des stages totalement nouveaux à la patte graphique et à l'ambiance sonore marquées.




= Objectifs de développement =

Dans cette partie sont présentés les différents objectifs fixés initialement pour le développement du jeu. Lorsqu'ils seront tous atteints, Project Warrior atteindra un nouveau stade de développement, qualifié selon le contentement de l'équipe vis-à-vis de la quantité et de la qualité du contenu et des fonctionnalités alors implémentées, mais aussi en fonction des critiques et avis extérieurs de la communauté libre ou de toute personne intéressée par le projet.



== Règles du jeu ==

=== Déroulement d'une partie ===

Project Warrior consiste comme vu dans la présentation en un jeu de combat dynamique reprenant de nombreuses mécaniques de SSB. Étudions le déroulement d'une partie //Mêlée// en local au travers d'un des joueurs pour mieux comprendre :

- Le joueur choisit parmi une liste de //héros// charismatiques celui qu'il souhaite incarner ;
- Il choisit ensuite dans quel stage (appelé aussi terrain) il souhaite combattre ; un stage est constitué de différentes plateformes sur lesquelles les personnages peuvent se mouvoir ;
- Le combat commence : l'objectif est d'éliminer les autres joueurs en les envoyant hors du terrain. Pour cela il est d'abord nécessaire d'affaiblir les ennemis en leur infligeant des pourcentages de dégâts plus ou moins importants selon les attaques utilisées, puis d'asséner une attaque appliquant une force de projection afin de faire totalement sortir l'ennemi de l'écran. Bien-entendu, plus les dégâts ayant été pris par la cible auparavant sont importants, et plus celle-ci sera projetée loin et donc susceptible de mourir.


=== Modes de jeu ===

Reste à savoir comment déterminer qui est le gagnant... cela va en fait dépendre du mode de jeu :

- Timelaps : le combat dure pendant un temps défini par le joueur, et celui qui à la fin possède le meilleur score gagne la partie. Le joueur gagne 1 point en tuant un adversaire, c'est-à-dire lorsque celui-ci meurt moins de 10 secondes après avoir pris des dommages venant de son agresseur. La mort entraîne la perte d'un point.
- SurVies : Tous les joueurs possèdent le même nombre de vies préalablement choisi, et le gagnant est le dernier à survivre (donc le seul qui n'a pas perdu toutes ses vies).


=== Règles modifiables ===

Certaines règles du jeu sont modifiable avant chaque partie, afin de diversifier l'expérience de jeu :

- Il est possible de donner des handicaps aux joueurs, afin de compenser des niveaux trop différents. Par exemple, dans le cas d'une partie Timelaps, certains joueurs peuvent avoir des points des le débuts, ou d'autres partir avec un malus, c'est à dire des points dans les négatifs. Dans le cas d'une partie Survies, le nombre de vie peut être différent entre les joueurs.
- La gravité peut aussi être modifiée : par défaut elle est de 1, une valeur plus grande rendant les personnages plus difficiles à éjecter mais aussi à déplacer. Une valeur plus faible rend les personages plus légers, donc ils sautent plus haut, se déplacent plus vite mais sont aussi éliminés plus vite. Attention cependant, les stages sont testés avec une gravité de 1 et la modification de cette valeur peut rendre le jeu très désagréable sur certains stages.
- Dans le cas d'une partie Survies, il est possible d'ajouter une //mort subite// : les personnages vont automatiquement subir des dégâts si la partie dure trop longtemps.
- La vitesse de récupération du mana peut aussi être modifiée. Une vitesse plus élevée incitera les joueurs à utiliser plus souvent des attaques spéciales, alors qu'une vitesse plus faible oblige les joueurs à réfléchir plus avant d'utiliser leurs coups spéciaux.
- Un coefficient sur les dégâts des attaques peut être attribué. Avec une valeur supérieure à 1, les personnages prendront plus de dégâts et seront donc éliminés plus vite.


=== Classement final ===

Selon le mode de jeu choisi et le nombre de joueurs, il sera établi à la fin de la partie un classement résumant les nombres de kills, de morts et même de suicides effectués par chaque joueur, ainsi que la position de chaque joueur dans le-dit classement (position qui dépendra du score en Timelaps ou de l'ordre de mort des joueurs en SurVies).



== Système de combat ==

Il est important de préciser que Project Warrior est prévu et optimisé pour être joué à la manette ; néanmoins une implémentation du clavier se fera sûrement, tous les joueurs ne possédant pas forcément de manette. Les contrôles au clavier n'ont pas encore été prévus.


=== Mouvements ===

Comme dans SSB, le personnage peut se déplacer dans 2 directions (droite et gauche) en marchant ou en courant selon l'inclinaison du stick, ainsi que sauter en appuyant sur un bouton et redescendre plus rapidement en inclinant fortement le stick vers le bas. Il y a aussi possibilité de double-saut, tout simplement en réappuyant sur le bouton de saut. Les animations des personnages s'adaptent bien évidemment à ces combinaisons de mouvements.


=== Attaques ===

Ici aussi, le système de combat de Project Warrior reprend beaucoup d'éléments de celui de SSB, particulièrement au niveau des attaques //normales//, que nous appellerons ici attaques physiques (même si certaines animations de personnages peuvent montrer l'utilisation de la magie dans ces attaques). Les attaques //spéciales// de SSB, que nous appellerons attaques magiques ou sorts, tiennent dans Project Warrior une place bien plus importante, notamment via la gestion du mana que nous étudierons un peu plus loin.
Les attaques étant spécifiques à chaque personnage, leurs caractéristiques sont détaillées dans la section dédiée.

==== Physiques ====

Ces attaques n'ont aucun coût pour le joueur, et existent sous de nombreuses formes à la puissance et aux effets variables suivant les boutons pressés. Comme dans SSB, ces attaques seront associés à une touche spécifique (que nous appellerons par convention ``P``), qui combinée à une inclinaison du stick plus ou moins forte dans une certaine direction, permettra les différentes attaques, variant selon que le personnage soit sur terre ou dans les airs.

==== Magiques ====

Les attaques magiques se lancent en appuyant sur la touche qui leur est associée (que nous appellerons par convention ``M``) tout en inclinant (ou pas) le stick dans une certaine direction pour choisir le sort à lancer. On compte ainsi 4 sorts par personnage : M, M+Côté, M+Haut et M+Bas.

Les attaques magiques diffèrent des attaques physiques de par un élément essentiel : la jauge de mana. Ainsi l'utilisation d'une compétence magique aura-t-elle un coût lié à sa puissance en termes de dégâts et/ou d'utilité, diminuant les ressources en mana du personnage ; si celui-ci ne possède pas assez de mana pour lancer sa compétence, il doit attendre que sa jauge se recharge. La récupération de mana est assez rapide pour permettre un gameplay dynamique et une utilisation fréquente des sorts, tout en demandant une gestion intelligente de cette ressource de par sa faible quantité. Ainsi un sort infligeant de lourds dégâts de zone et étourdissant brièvement les ennemis sera considéré puissant, et pourra par conséquent nécessiter toutes les ressources en mana de ce dernier, empêchant le joueur d'abuser du sort, d'autant plus qu'il devra utiliser d'autres sorts qui retarderont le moment où sa jauge de mana sera pleine. 


=== Postures défensives ===

==== Bouclier ====

Le bouclier, tout comme dans SSB, entoure le personnage d'une bulle qui encaisse les attaques ennemies. Néanmoins, son utilisation diffère de par son coût en mana : contrairement à SSB, le bouclier ne se réduira pas tant qu'il n'aura pas encaissé de coups, mais le joueur se voit dans l'obligation de l'activer au bon moment pour éviter de perdre inutilement de sa ressource bleue préférée. Le bouclier guérit automatiquement de ses blessures, mais bien plus lentement que dans SSB ; si un ennemi en vient à bout, alors le joueur est étourdi pendant quelques secondes, puis le bouclier est complètement réinitialisée.

Pour activer le bouclier, on pressera l'une des gâchettes de la manette.

==== Esquives ====

Les esquives permettent au personnage d'éviter toute attaque ennemie pendant un court laps de temps. Les esquives, tout comme le bouclier, coûtent du mana, obligeant le joueur à s'en servir à bon escient. Il existe 4 types d'esquives :

- L'esquive latérale, qui consiste en une esquive effectuée en mouvement sur une courte distance ; le personnage ignore alors toutes les collisions. Elle s'effectue à partir du bouclier en inclinant au maximum le stick vers la gauche ou vers la droite, selon la direction souhaitée.
- L'esquive latérale aérienne, qui correspond à une esquive latérale effectuée dans les airs. Le personnage ne peut effectuer qu'une seule esquive de ce genre avant de retoucher le sol, pour éviter d'en faire un outil de mobilité et de rattrapage sur le terrain. Aussi, cette esquive réinitialise toutes les forces que le personnage subissait (dont la gravité qui se réapplique donc selon sa position à la fin de l'esquive). Le bouclier n'étant pas utilisable dans les airs, on utilisera les mêmes touches que l'esquive latérale, mais en commençant par incliner le stick.
- L'esquive statique, équivalente à l'esquive latérale, sans la notion de mouvement. Le coût en mana est moindre. On l'effectue à partir du bouclier en inclinant complètement le stick vers le bas.
- L'esquive statique aérienne, qui correspond à une esquive statique effectuée dans les airs. Elle conserve les forces déjà appliquées au personnage et s'effectue en appuyant sur le bouton du bouclier.



== Personnages ==

TODO part.



== Stages ==

Les stages sont les terrains dans lesquels les combats ont lieux. Ils doivent dégager une ambiance particulière et leur forme peut fortement influencer la façon de combattre. Les stages ne doivent pas être trop grands car ils peuvent apparaitre entièrement à l'écran si les personnages sont très éloignés. De plus, ils ne doivent pas être complètement fermées car sinon les personnages ne peuvent pas mourrir.

Les stages possèdent différents éléments :

- Les murs, qui offrent juste un appuit pour les joueurs.
- Différents types de pièges, qui infligent des dégats lorsque les joueurs les touchent dans une certaine direction (ou plusieurs), comme des pics.
- Des trampolines, qui font rebondir les personnages qui entrent en contact avec eux.


Les stages peuvent être animés, avec des murs qui bougent, formant des plateformes, des pièges qui se referment ... De plus, les stages peuvent changer dynamiquement au cours d'un combat, en fonction du temps, des actions des joueurs ... Cependant, des modifications trop rapides sur un stage peuvent entrainer des bugs, c'est donc aux créateurs des terrains de s'assurer qu'il ne sont pas modifiés trop vite.



= Détails techniques =

== Languages ==

Ce programme sera codé en C/C++ : la majorité du code sera en //C++11// (la dernière norme, de 2011), avec un code majoritairement orienté-objet, mais certaines parties du code pouront être codées en C, si jugé pertinent. Le jeu devra être portable, au moins entre Linux, Windows et MacOS.
La partie graphique du jeu sera géré avec la //SDL 1.2// et //OpenGL 2//, des bibliothèques portables. Le son sera lui aussi géré par la //SDL//. Le jeu pourra utiliser d'autres bibliothèques comme //boost// si jugé utile : l'objectif n'est pas d'avoir le moins de dépendances possible.

== Licence ==

L'ensemble du code du jeu sera sous licence GPLv3. À terme la licence pourra évoluer vers une GPLv3+. La licence des autres éléments du jeu tels que les images, les sons et autres ressources est laissée à la discrétion des créateurs de ces ressources. Il doivent néanmoins choisir au minimum une licence de libre distribution (par exemple une CC-BY-NC-ND) si leurs créations doivent être intégrés comme ressources officielles du jeu.



= FAQ =

Dans cette section peuvent être trouvées des réponses à des questions concernant principalement les choix de Game Design.

== Pourquoi un jeu strictement multijoueurs ? ==

Project Warrior est pour le moment prévu en tant que jeu strictement multijoueurs, c'est à dire qu'il faut au minimum 2 joueurs pour profiter du jeu ; il y a plusieurs raisons à cela :

- Créer un mode solo pour un jeu de combat nécessite de coder une IA que le joueur doit défier, avec toutes les difficultés techniques que cela implique
- Une IA possède forcément des limites au niveau de la difficulté, contrairement à l'adversaire humain
- Project Warrior se veut avant tout un jeu convivial sur lequel les gens s'amusent à plusieurs et se confrontent directement, ce qui est particulièrement vrai en mode local et ce qui ne se retrouvera pas par exemple dans un mode Classique ou Aventure à la SSB
- Le multijoueurs permet aussi d'amener une notion de compétitivité qui rajoute énormément de durée de vie au soft si on la développe dans un mode online, avec des duels ou des combats en équipes équilibrées


Coder un mode solo serait donc une perte d'mana et de temps considérable pour un jeu dont les enjeux tournent autour de l'intéraction entre les joueurs. Néanmoins il n'est pas exclu que le joueur puisse s'approprier les personnages et leurs techniques de combat dans un mode de jeu - exceptionnellement - solo, en se défoulant gentiment et sans limites sur une entité inerte similaire au sac de sable de SSB.
